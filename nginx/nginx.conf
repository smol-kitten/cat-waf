load_module modules/ngx_http_modsecurity_module.so;
# load_module modules/ngx_http_geoip_module.so; # Disabled - requires .dat files

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # WebSocket/Upgrade connection handling
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format waf '$host $http_x_real_ip $remote_addr - [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time" '
                   'cs=$upstream_cache_status '
                   'ua="$upstream_addr"';

    access_log /var/log/nginx/access.log waf;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Hide NGINX version
    server_tokens off;

    # Real IP extraction from proxy headers (Docker network IP preservation)
    # Trust Docker bridge networks and common private networks
    set_real_ip_from 172.16.0.0/12;   # Docker default bridge networks
    set_real_ip_from 10.0.0.0/8;       # Private networks
    set_real_ip_from 192.168.0.0/16;   # Private networks
    set_real_ip_from 127.0.0.1;        # Localhost
    set_real_ip_from ::1;               # Localhost IPv6
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # GeoIP - Disabled (requires GeoIP.dat format, not MaxMind DB format)
    # geoip_country /usr/share/GeoIP/GeoIP.dat;

    # Rate limiting zones (dynamically configured per site)
    # NOTE: Zone rates set EXTREMELY HIGH to never trigger - actual rate limiting controlled by burst parameter
    # The zone rate is per-IP, but must be higher than any burst value or it still limits
    limit_req_zone $binary_remote_addr zone=general:10m rate=100000r/s;
    limit_req_zone $binary_remote_addr zone=strict:10m rate=100000r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100000r/s;
    limit_req_zone $binary_remote_addr zone=custom:10m rate=100000r/s;
    
    # Cloudflare rate limiting zone (higher limits for CF proxied requests)
    limit_req_zone $binary_remote_addr zone=cloudflare:10m rate=100000r/s;
    
    # Rate limit status
    limit_req_status 429;
    
    # Connection limiting zone
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Retry-After header for 429 responses
    map $status $retry_after {
        default "";
        429 "60";
    }
    add_header Retry-After $retry_after always;

    # Ban list (managed by Fail2Ban)
    include /etc/nginx/banlist.conf;

    # ModSecurity - controlled per-site in site configs
    # modsecurity on;  # DO NOT enable globally - sites control this individually
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

    # Default backend for unknown hosts
    upstream default_backend {
        server default-backend:80;
    }

    # Include site-specific configurations
    include /etc/nginx/sites-enabled/*.conf;
    include /etc/nginx/conf.d/*.conf;
}
